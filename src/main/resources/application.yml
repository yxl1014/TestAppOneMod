logging:
  config: classpath:log4j_using.xml
spring:
  profiles:
    active: 8080
  datasource:
    url: jdbc:mysql://localhost:3306/testapp?useUnicode=true&characterEncoding=utf8&useSSL=true&autoReconnect=true&failOverReadOnly=false
    username: root
    password: root
    driver-class-name: com.mysql.cj.jdbc.Driver
  # REDIS (RedisProperties)
  # Redis数据库索引（默认为0）
  redis:
    database: 0
    # Redis服务器地址 写你的ip
    host: 127.0.0.1
    # Redis服务器连接端口
    port: 6379
    # Redis服务器连接密码（默认为空）
    password:
    # 连接池最大连接数（使用负值表示没有限制  类似于mysql的连接池
    jedis:
      pool:
        max-active: 200
        # 连接池最大阻塞等待时间（使用负值表示没有限制） 表示连接池的链接拿完了 现在去申请需要等待的时间
        max-wait: -1
        # 连接池中的最大空闲连接
        max-idle: 10
        # 连接池中的最小空闲连接
        min-idle: 0
    # 连接超时时间（毫秒） 去链接redis服务端
    timeout: 6000
  kafka:
    consumer:
      group-id: ResultGroup
      enable-auto-commit: true
      auto-commit-interval: 1000
      auto-offset-reset: latest
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      max-poll-records: 50
    bootstrap-servers: 127.0.0.1:9092
    listener:
      missing-topics-fatal: false
      type: batch

hadoop.name-node: hdfs://127.0.0.1:9000
hadoop.namespace: /testapp/
hadoop.out: /out/
local.srcUrl: /home/yxl/IdeaProjects/TestAppOneMod/hadoopFile/
